{"version":3,"sources":["components/Navbar.js","img/01.jpg","img/02.png","img/03.png","eth.png","components/Carousel.js","components/Main.js","components/Home.js","components/Footer.js","components/App.js","reportWebVitals.js","index.js"],"names":["Navigation","account","Navbar","expand","bg","variant","Container","Brand","href","Toggle","Collapse","id","Nav","className","Link","as","to","target","rel","Button","slice","Component","Main","scope","window","web3","utils","fromWei","this","props","stakingBalance","catellaTokenBalance","onSubmit","event","amount","preventDefault","input","value","toString","toWei","stakeTokens","techTokenBalance","type","ref","placeholder","required","src","tech","height","alt","class","onClick","unstakeTokens","App","setState","loading","state","techToken","methods","approve","tokenFarm","_address","send","from","on","hash","catellaToken","a","loadWeb3","loadBlockchainData","ethereum","Web3","request","method","accounts","console","log","currentProvider","alert","eth","getAccounts","net","getId","networkId","techTokenData","TechToken","networks","Contract","abi","address","balanceOf","call","catellaTokenData","CatellaToken","tokenFarmData","TokenFarm","content","role","MyFooter","style","backgroundColor","path","element","Home","Footer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.8a4b91f8.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Nav, Button, Container } from 'react-bootstrap';\n\nconst Navigation = ({ account }) => {\n    return (\n        <Navbar expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Container>\n                <Navbar.Brand href=\"#\">\n                    &nbsp; CatellaTech Dapp ðŸ’°\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"navbar navbar-dark bg-primary\" />\n                <Navbar.Collapse id=\"navbar navbar-dark bg-primary\">\n                    <Nav className=\"me-auto\">\n                        <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n                    </Nav>\n                    <Nav>\n                    &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n                                &nbsp; &nbsp;\n                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n                                &nbsp; &nbsp;\n                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n                                &nbsp; &nbsp;\n                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n                                &nbsp; &nbsp;\n                                &nbsp; &nbsp;\n                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n                                &nbsp; &nbsp;\n                        <Nav.Link \n                            href={`https://etherscan.io/address/${account}`}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            className=\"button nav-button btn-sm mx-4\">\n                            <Button variant=\"outline-light\">\n                                {account.slice(0, 10) + '...' + account.slice(32, 42)}\n                            </Button>\n                        </Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    )\n\n}\n\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/01.0e0537c7.jpg\";","export default __webpack_public_path__ + \"static/media/02.5208baa9.png\";","export default __webpack_public_path__ + \"static/media/03.9d08f483.png\";","export default __webpack_public_path__ + \"static/media/eth.db7299ed.png\";","import React, { Component } from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\nimport img1 from '../img/01.jpg';\nimport img2 from '../img/02.png';\nimport img3 from '../img/03.png';\n\n\nclass MyCarousel extends Component {\n    render() {\n        return (\n            <Carousel>\n                <Carousel.Item>\n                    <a href='#'>\n                        <img\n                            className=\"d-block w-100 style\"\n                            src={img1}\n                            alt=''\n                        />\n                    </a>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <a href='#'>\n                        <img\n                            className=\"d-block w-100\"\n                            src={img2}\n                            alt=''\n                        />\n                    </a>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <a href='#'>\n                        <img\n                            className=\"d-block w-100\"\n                            src={img3}\n                            alt=''\n                        />\n                    </a>\n                </Carousel.Item>\n            </Carousel>\n\n        );\n    }\n}\n\nexport default MyCarousel;","import React, {Component} from 'react';\r\nimport tech from '../eth.png';\r\nimport '../style.css';\r\n\r\nclass Main extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"content\" className=\"mt-3\">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className='texto' scope=\"col\">Balance de Staking</th>\r\n                            <th className='texto' scope=\"col\">Balance de recompensas</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr className='ltexto'>\r\n                            <td>\r\n                                {window.web3.utils.fromWei(\r\n                                    this.props.stakingBalance,\r\n                                    'Ether'\r\n                                )}{' '}\r\n                                TECH\r\n                            </td>\r\n                            <td>\r\n                                {window.web3.utils.fromWei(\r\n                                    this.props.catellaTokenBalance,\r\n                                    'Ether'\r\n                                )}{' '}\r\n                                ELLA{' '}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n                <div className=\"card mb-4\">\r\n                    <div className=\"card-body\">\r\n                        <form\r\n                            className=\"mb-3\"\r\n                            onSubmit={(event) => {\r\n                                event.preventDefault();\r\n                                let amount;\r\n                                amount = this.input.value.toString();\r\n                                amount = window.web3.utils.toWei(\r\n                                    amount,\r\n                                    'Ether'\r\n                                );\r\n                                this.props.stakeTokens(amount);\r\n                            }}\r\n                        >\r\n                            <div>\r\n                                <label className=\"stake\">\r\n                                    <b>Stake Tokens</b>\r\n                                </label>\r\n                                <span className=\"balance\">\r\n                                    <b>Balance:{' '} </b>\r\n                                    {window.web3.utils.fromWei(\r\n                                        this.props.techTokenBalance,\r\n                                        'Ether'\r\n                                    )}\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div className=\"input-group\">\r\n\r\n                                \r\n                                <input\r\n                                    type=\"text\"\r\n                                    ref={(input) => {\r\n                                        this.input = input;\r\n                                    }}\r\n                                    className=\"from-control form-control-lg\"\r\n                                    placeholder=\"0\"\r\n                                    required\r\n                                />\r\n\r\n                                <div className=\"input-group-append\">\r\n                                    <div className=\"input-group-text\">\r\n                                        <img src={tech} height=\"32\" alt=\"\" />\r\n                                        &nbsp;&nbsp;&nbsp; TECH\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        <div class=\"d-grid gap-2 d-md-block\">\r\n                        <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-primary \"\r\n                            >\r\n                                 STAKE\r\n                            </button>\r\n                            &nbsp;&nbsp;\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-danger \"\r\n                            onClick={(event) => {\r\n                                event.preventDefault();\r\n                                this.props.unstakeTokens();\r\n                            }}\r\n                        >\r\n                            {' '}\r\n                             UNSTAKE\r\n                        </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import React, {Component} from 'react';\n\n// Importamos nuestros contratos\nimport TechToken from '../abis/TechToken.json';\nimport CatellaToken from '../abis/CatellaToken.json';\nimport TokenFarm from '../abis/TokenFarm.json';\n\n// web3js para acceder a la blockchain\nimport Web3 from 'web3';\n\n// Accediendo a los componentes de la Dapp\nimport Navigation from './Navbar';\nimport MyCarousel from './Carousel';\nimport Main from './Main';\nimport  '../style.css';\n\nclass App extends Component {\n    async componentDidMount() {\n        // 1. Carga de Web3\n        await this.loadWeb3();\n        // 2. Carga de datos de la Blockchain\n        await this.loadBlockchainData();\n    }\n\n    // 1. Carga de Web3\n    async loadWeb3() {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum);\n            const accounts = await window.ethereum.request({\n                method: 'eth_requestAccounts',\n            });\n            console.log('Accounts: ', accounts);\n        } else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider);\n        } else {\n            window.alert('Â¡DeberÃ­as considerar usar Metamask!');\n        }\n    }\n\n    // 2. Carga de datos de la Blockchain\n    async loadBlockchainData() {\n        const web3 = window.web3;\n        const accounts = await web3.eth.getAccounts();\n        this.setState({account: accounts[0]});\n        console.log('Account 0: ', accounts[0]);\n        // Ganache -> 5777, Rinkeby -> 4, BSC -> 97\n        const networkId = await web3.eth.net.getId();\n        console.log('networkid:', networkId);\n\n        // Carga del TechToken -> Token para hacer staking\n        const techTokenData = TechToken.networks[networkId];\n        console.log(techTokenData);\n        if (techTokenData) {\n            const techToken = new web3.eth.Contract(\n                TechToken.abi,\n                techTokenData.address\n            );\n            this.setState({techToken: techToken});\n            let techTokenBalance = await techToken.methods\n                .balanceOf(this.state.account)\n                .call();\n            console.log(techTokenBalance);\n            this.setState({techTokenBalance: techTokenBalance.toString()});\n        } else {\n            window.alert('Tech token no se ha desplegado en la red');\n        }\n\n        // Carga de CatellaToken -> Token de recompesa\n        const catellaTokenData = CatellaToken.networks[networkId];\n        console.log(catellaTokenData);\n        if (catellaTokenData) {\n            const catellaToken = new web3.eth.Contract(\n                TechToken.abi,\n                catellaTokenData.address\n            );\n            this.setState({catellaToken: catellaToken});\n            let catellaTokenBalance = await catellaToken.methods\n                .balanceOf(this.state.account)\n                .call();\n            console.log(catellaTokenBalance);\n            this.setState({\n                catellaTokenBalance: catellaTokenBalance.toString(),\n            });\n        } else {\n            window.alert('Catella token no se ha desplegado en la red');\n        }\n\n        // Carga de TokenFarm -> smart contract de la gestion de la DeFi\n        const tokenFarmData = TokenFarm.networks[networkId];\n        if (tokenFarmData) {\n            const tokenFarm = new web3.eth.Contract(\n                TokenFarm.abi,\n                tokenFarmData.address\n            );\n            this.setState({tokenFarm: tokenFarm});\n            let stakingBalance = await tokenFarm.methods\n                .stakingBalance(this.state.account)\n                .call();\n            console.log(stakingBalance);\n            this.setState({stakingBalance: stakingBalance.toString()});\n        } else {\n            window.alert('Token Farm no se ha desplegado en la red');\n        }\n\n        this.setState({loading: false});\n    }\n\n    // funcion para hacer staking del token TechToken\n    stakeTokens = (amount) => {\n        this.setState({loading: true});\n        this.state.techToken.methods\n            .approve(this.state.tokenFarm._address, amount)\n            .send({from: this.state.account})\n            .on('transactionHash', (hash) => {\n                this.state.tokenFarm.methods\n                    .stakeTokens(amount)\n                    .send({from: this.state.account})\n                    .on('transactionHash', (hash) => {\n                        this.setState({loading: false});\n                    });\n            });\n    };\n\n    // Funcion para hacer unstaking de nuestros tokens\n    unstakeTokens = (amount) => {\n        this.setState({loading: true});\n        this.state.tokenFarm.methods\n            .unstakeTokens()\n            .send({from: this.state.account})\n            .on('transactionHash', (hash) => {\n                this.setState({loading: false});\n            });\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            account: '0x0',\n            loading: true,\n            techToken: {},\n            techTokenBalance: '0',\n            catellaToken: {},\n            catellaTokenBalance: '0',\n            tokenFarm: {},\n            stakingBalance: '0',\n        };\n    }\n\n    render() {\n        let content;\n        if (this.state.loading) {\n            content = (\n                <p id=\"loader\" className=\"text-center\">\n                    Loading...\n                </p>\n            );\n        } else {\n            content = (\n                <Main\n                    techTokenBalance={this.state.techTokenBalance}\n                    catellaTokenBalance={this.state.catellaTokenBalance}\n                    stakingBalance={this.state.stakingBalance}\n                    stakeTokens={this.stakeTokens}\n                    unstakeTokens={this.unstakeTokens}\n                />\n            );\n        }\n        return (\n            <div>\n                <Navigation account={this.state.account} />\n                <div className=\"container-fluid mt-5\">\n                    <div className=\"row\">\n                    <h1 className='tittle'>Staking Dapp</h1>\n                        <main\n                            role=\"main\"\n                            className=\"col-lg-12 d-flex text-center\"\n                        >\n                            <div className=\"content mr-auto ml-auto\">\n                                {content}\n                                \n                                <h5 className='author'>\n                                    Staking DApp (Autor:{' '}\n                                    <a href=\"https://github.com/gab0071\">\n                                        CatellaTechâœ¨â›“\n                                    </a>\n                                    )\n                                </h5>\n                                <a\n                                    className=\"App-link\"\n                                    href=\"https://github.com/gab0071\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                >\n                                    Â¡APRENDE BLOCKCHAIN{' '}\n                                    <u>\n                                        <b>AHORA! </b>\n                                    </u>\n                                </a>\n                            </div>\n                        </main>\n                        &nbsp; &nbsp; &nbsp; &nbsp;\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\n\nconst MyFooter = () => (\n    <footer\n        style={{backgroundColor: 'rgba(0, 0, 0, 0.05)'}}\n        className=\"text-center text-lg-start text-muted\"\n    >\n        <div className=\"text-center p-4 bg-dark text-white\">\n            Â© 2022 Copyright: \n            <a\n                className=\"text-reset fw-bold text-white\"\n                href=\"https://github.com/gab0071\"\n            > CatellaTech\n            </a>\n        </div>\n    </footer>\n);\n\nexport default MyFooter;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\n\nimport Home from './Home';\nimport Footer from './Footer';\n\n\nclass App extends Component {\n    \n    render() {\n        return (\n            <BrowserRouter>\n                <div className=\"App\">\n                    <div>\n                        <Routes>\n                            <Route path=\"/\" element={<Home />} />\n                        </Routes>\n                    </div>\n                    <Footer />\n                </div>\n            </BrowserRouter>\n        );\n    }\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      });\n    }\n  };\n  \n  export default reportWebVitals;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from 'react-dom/client';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App />\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}